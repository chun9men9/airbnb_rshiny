temp=num1+num2
num1=num2
num2=temp
}
fbsum
num1=1
num2=2
fbsum=0
while(num2<4e6){
#cat(num1, num2,'\n')
if(num2%%2==0){fbsum=fbsum+num2}
temp=num1+num2
num1=num2
num2=temp
}
fbsum
apply(matrx,1,function(x) sum(x*vec))
matrix_times_vec=function(matrx,vec){
if(ncol(matrx)!=length(vec)) stop('Error! Matrix and Vector Dimensions Do NOT Match')
return(matrix(apply(matrx,1,function(x) sum(x*vec))))
}
matrix_times_vec(matrx,vec)
eqlen = function(str1,str2){
return(ifelse(nchar(str1)==nchar(str2),'EQUAL LENGTH','NOT EQUAL LENGTH'))
}
eqlen("EPS568","Summer")
eqlen = function(str1,str2){
return(ifelse(nchar(str1)==nchar(str2),'EQUAL LENGTH','NOT EQUAL LENGTH'))
}
eqlen("EPS568","Summer1")
install.packages("googleVis")
library(googleVis)
demo(googl eVis)
demo(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
source('~/.active-rstudio-document')
library(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
?Fruits
head(Fruits)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
devtools::install_github("rstudio/leaflet")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("rstudio/leaflet")
leaflet() %>% addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-74.0059, lat=40.7128, popup="New York City")
leaflet() %>% addTiles() %>%  # Add default OpenStreetMap map tiles addMarkers(lng=-74.0059, lat=40.7128, popup="New York City")
leaflet() %>% addTiles() %>% (lng=-74.0059, lat=40.7128, popup="New York City")
leaflet() %>% addTiles() %>% addMarker(lng=-74.0059, lat=40.7128, popup="New York City")
leaflet() %>% addTiles() %>% addMarkers(lng=-74.0059, lat=40.7128, popup="New York City")
leaflet_andrew <- leaflet(Andrew) %>%
addTiles() %>%
addPolylines(~Long, ~Lat)
leaflet_andrew
leaflet(Andrew)
library(leaflet)
leaflet(Andrew)
devtools::install_github("rstudio/leaflet")
devtools::install_github("rstudio/leaflet", force=TRUE)
leaflet(Andrew)
nstall.packages("googleVis")
install.packages("googleVis")
leaflet(Andrew)
leaflet_andrew <- leaflet(Andrew) %>%
addTiles() %>%
addPolylines(~Long, ~Lat)
leaflet_andrew
devtools::install_github("rstudio/leaflet", force=TRUE)
leaflet(Andrew)
colstates<-map("state", fill=TRUE,plot=FALSE, region=c("florida","alabama","louisiana","mississippi"))
library(map)
install.packages('map')
update(R)
updateR()
summary(aov(PlantGrowth$weight ~ PlantGrowth$group))
data("HairEyeColor")
mosaicplot(HairEyeColor, shade = TRUE)
mosaicplot(HairEyeColor_subset, shade = TRUE)
HairEyeColor_subset=HairEyeColor[,1:2,2]
mosaicplot(HairEyeColor_subset, shade = TRUE)
names(chisq.test(HairEyeColor_subset))
chisq.test(HairEyeColor_subset)$expected
chisq.test(HairEyeColor_subset)$residuals
chisq.test(HairEyeColor_subset)$observed
expected=chisq.test(HairEyeColor_subset)$expected
subset=HairEyeColor[,1:2,2]
mosaicplot(subset, shade = TRUE)
(subset-expected)^2/expected
(subset-expected)^2/2
shiny::runApp('C:/Users/cmlim/git_proj/rshinyapp')
airbnb_plot_df=airbnb_map_df%>%
#filter(room_type=='Private room') %>%
group_by(room_type,nbhood,county,boro)%>%
summarise(n_listings=n(), median_price=median(price), avg_subwaydist=sum(subway_dist)/n() )
airbnb_plot_df=inner_join(airbnb_plot_df,crime_df, by=c('nbhood','county'))
airbnb_plot2_df=airbnb_plot_df%>%group_by(room_type,boro)%>%
summarise(avg_crime_density=mean(crime_density), median_price=median(median_price))
airbnb_plot_df=airbnb_map_df%>%
filter(room_type=='Private room') %>%
group_by(room_type,nbhood,county,boro)%>%
summarise(n_listings=n(), median_price=median(price), avg_subwaydist=sum(subway_dist)/n() )
airbnb_plot_df=inner_join(airbnb_plot_df,crime_df, by=c('nbhood','county'))
airbnb_plot_df=airbnb_map_df%>%
filter(room_type=='Private room') %>%
group_by(nbhood,county,boro)%>%
summarise(n_listings=n(), median_price=median(price), avg_subwaydist=sum(subway_dist)/n() )
airbnb_plot_df=inner_join(airbnb_plot_df,crime_df, by=c('nbhood','county'))
airbnb_plot_df=airbnb_map_df%>%
filter(room_type=='Private room') %>%
group_by(nbhood,county,boro)%>%
summarise(n_listings=n(), avg_price=sum(price)/n(), avg_subwaydist=sum(subway_dist)/n() )
airbnb_plot_df=inner_join(airbnb_plot_df,crime_df, by=c('nbhood','county'))
bins=quantile(airbnb_plot_df$crime_density,c(0,0.5,0.7,0.85,1))
crime_level=cut(airbnb_plot_df$crime_density,bins,include.lowest=T)
levels(crime_level)=c('Very Low','Low','Moderate','High','Very High')
airbnb_plot_df$crime_level=crime_level
airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville'))%>%
ggplot(aes(x=nbhood, y=crime_density,fill=nbhood))+ geom_col()
airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville'))%>%
ggplot(aes(x=nbhood, y=crime_density,fill=crime_level))+ geom_col()
airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville'))%>%
ggplot(aes(x=nbhood, y=crime_density,fill=nbhood))+ geom_col()
airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville'))%>%
ggplot(aes(x=nbhood, y=crime_density,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+ geom_col()
airbnb_plot2_df=airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville'))
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+ geom_col()
airbnb_plot2_df=airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville','Greenwood'))
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_subwaydist,fill=boro))+ geom_col()
ggplot(airbnb_plot2_df, aes(y=crime_density,fill=boro))+
geom_col()+ggtitle("Crime Density")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+
geom_col()+ggtitle("Crime Density")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+geom_col()
+xlab("Neighborhoods")+ylab("Crime Density")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Crime Density")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Crime Density (Crime Counts/Area)")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,color=boro,fill=crime_level))+geom_col()+
xlab("Neighborhoods")+ylab("Crime Density (Crime Counts/Area)")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+geom_col() +
xlab("Neighborhoods")+ylab("Average Listing Price/Night")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_subwaydist,fill=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Average Subway Distances (meters)")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,color=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Crime Density (Crime Counts/Area)")
airbnb_plot2_df=airbnb_plot_df%>%
filter(nbhood %in% c('Carnegie Hill','College Point', 'Graniteville','Greenwood'))
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+geom_col() +
xlab("Neighborhoods")+ylab("Average Listing Price/Night")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_subwaydist,fill=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Average Subway Distances (meters)")
ggplot(airbnb_plot2_df, aes(x=nbhood, y=crime_density,fill=boro))+geom_col()+
xlab("Neighborhoods")+ylab("Crime Density (Crime Counts/Area)")
runApp('C:/Users/cmlim/git_proj/rshinyapp')
ggplot(airbnb_plot2_df, aes(x=nbhood, y=avg_price,fill=boro))+geom_col() + coord_flip()
xlab("Neighborhoods")+ylab("Average Listing Price/Night")
runApp('C:/Users/cmlim/git_proj/rshinyapp')
?plotOutput
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
library(ggthemes)
ggplot(airbnb_plot_df, aes(x = log(price), color = boro)) +
geom_density() + xlim(2,8) +
ggtitle("Distribution of Prices - Log Scale") +  theme_fivethirtyeight()
library(ggthemes)
ggplot(airbnb_map_df, aes(x = log(price), color = boro)) +
geom_density() + xlim(2,8) +
ggtitle("Distribution of Prices - Log Scale") +  theme_fivethirtyeight()
library(ggthemes)
ggplot(airbnb_map_df, aes(x = price, color = boro)) +
geom_density() + xlim(2,8) +
ggtitle("Distribution of Prices - Log Scale") +  theme_fivethirtyeight()
ggplot(airbnb_map_df, aes(x = boro,  price, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + ylim(0,5) + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_map_df, aes(x = boro,  price, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_map_df%>%filter(room_type=='Private Room'), aes(x = boro,  price, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_map_df%>%filter(room_type=='Private room'), aes(x = boro,  price, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_map_df, aes(x = boro,  crime_density, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  crime_density, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  avg_subwaydist, color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  log(avg_subwaydist), color = boro)) +
ggtitle("Reviews Per Month") +  theme_fivethirtyeight()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  log(avg_subwaydist), color = boro)) +
ggtitle("Reviews Per Month") +  theme_hc()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  log(avg_subwaydist), color = boro)) +
ggtitle("Reviews Per Month") +  theme_solarized()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
ggplot(airbnb_plot_df, aes(x = boro,  log(avg_subwaydist), color = boro)) +
ggtitle("Reviews Per Month") +  theme_gdocs()  + geom_boxplot() + geom_violin(aes(fill = boro), alpha = 0.2)
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
unique(airbnb_map_df$room_type)
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
View(airbnb_price_df)
shiny::runApp('C:/Users/cmlim/git_proj/rshinyapp')
install.packages("renderGvis")
library(devtools)
install.packages("renderGvis")
shiny::runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
install.packages(devtools)
install.packages("renderGvis")
install.packages(devtool)
install.packages("devtools")
install.packages("renderGvis")
library(renderGvis)
install.packages(c("curl", "dplyr", "Rcpp", "rgdal"))
install.packages(c("curl", "dplyr", "Rcpp", "rgdal"))
library(renderGvis)
install.packages("renderGvis")
shiny::runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
install.packages('googleVis')
runApp('C:/Users/cmlim/git_proj/rshinyapp')
rm(list=ls())
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
rm (list=ls())
shiny::runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
library(waffle)
airbnb_waffle_df=airbnb_plot_df%>%group_by(crime_level,boro)%>%summarise(n_nbhood=n())
bronx_waffle=airbnb_waffle_df%>%filter(boro=='Bronx')%>%select(crime_level,n_nbhood)
manhattan_waffle=airbnb_waffle_df%>%filter(boro=='Manhattan')%>%select(crime_level,n_nbhood)
waffle(bronx_waffle$n_nbhood)
nrow(bronx_waffle$n_nbhood)
length(bronx_waffle$n_nbhood)
sum(bronx_waffle$n_nbhood)
waffle(rows=4, bronx_waffle$n_nbhood)
waffle(rows=4,manhattan_waffle$n_nbhood)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
View(airbnb_boro_df)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
waffle(rows=4, airbnb_waffle_df$n_nbhood)
boro_waffle_df=airbnb_waffle_df%>%filter(boro=='Bronx')%>%select(crime_level,n_nbhood)
waffle(rows=4, boro_waffle_df$n_nbhood)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
boro_waffle_df$n_nbhood
airbnb_waffle_df%>%filter(boro=='Bronx')%>%select(crime_level,n_nbhood)
airbnb_waffle_df%>%filter(boro=='Staten Island')%>%select(crime_level,n_nbhood)
paste('"',crime_level,'"')
paste('"',boro_waffle_df$crime_level,'"')
paste('\"',boro_waffle_df$crime_level,'\"')
paste("'",boro_waffle_df$crime_level,"'")
paste("\'",boro_waffle_df$crime_level,"\'")
paste("'",as.character(boro_waffle_df$crime_level),"\'")
paste("",as.character(boro_waffle_df$crime_level),"")
class(paste("",as.character(boro_waffle_df$crime_level),""))
dim(paste("",as.character(boro_waffle_df$crime_level),""))
length(paste("",as.character(boro_waffle_df$crime_level),""))
length(paste0("",as.character(boro_waffle_df$crime_level),""))
length(paste0("",as.character(boro_waffle_df$crime_level),"="))
(paste0("",as.character(boro_waffle_df$crime_level),"="))
(paste0("",as.character(boro_waffle_df$crime_level),""=))
(paste0("",as.character(boro_waffle_df$crime_level),"",'='))
(paste0("",as.character(boro_waffle_df$crime_level),"",=))
(paste0("",as.character(boro_waffle_df$crime_level),"",'='))
paste0('HI, 'my'')
paste0('HI, 'my')
paste0('HI', 'my')
(paste0(""",as.character(boro_waffle_df$crime_level),"""))
paste0(""",as.character(boro_waffle_df$crime_level),""")
paste0("\"",as.character(boro_waffle_df$crime_level),"\"")
paste0('"',as.character(boro_waffle_df$crime_level),'"')
paste0('"',as.character(boro_waffle_df$crime_level),'"','=')
paste0('"',as.character(boro_waffle_df$crime_level),'"','=',boro_waffle_df$crime_level)
paste0('"',as.character(boro_waffle_df$crime_level),'"','=',as.character(boro_waffle_df$crime_level))
paste0('"',as.character(boro_waffle_df$crime_level),'"','=',boro_waffle_df$n_nbhood
)
waffle_list=paste0('"',as.character(boro_waffle_df$crime_level),'"','=',boro_waffle_df$n_nbhood)
waffle_list
waffle(rows = 4, waffle_list)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
A=c('a','b','c')
B=c(1,2,3)
paste0(A,B)
paste0(A,B,sep=""")
)
paste0(A,B,sep="\"")
paste0(A,B,sep='"')
'"'*3
rep('"',3)
paste0(B,A,B,sep='"')
paste0('"',as.character(boro_waffle_df$crime_level),'"')
crime_lbl=paste0('"',as.character(boro_waffle_df$crime_level),'"')
crime_lbl
length(crime_lbl)
length(crime_lbl[1])
nchar(crime_lbl[1])
paste(crime_lbl,boro_waffle_df$n_nbhood)
paste(crime_lbl,boro_waffle_df$n_nbhood, sep='=')
paste(crime_lbl,boro_waffle_df$n_nbhood, sep='=', collapse = ',')
crime_vec=paste(crime_lbl,boro_waffle_df$n_nbhood, sep='=', collapse = ',')
crime_vec
waffle(rows=4,crime_vec)
crime_vec=paste(crime_lbl,boro_waffle_df$n_nbhood, sep='=')
waffle(rows=4,crime_vec)
crime_vec=paste(boro_waffle_df$crime_level,boro_waffle_df$n_nbhood, sep='=')
waffle(rows=4,crime_vec)
waffle(rows=4,boro_waffle_df$n_nbhood)
?geom_tile
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
ggplot(df, aes(x, y)) +
geom_tile(aes(fill = z))
airbnb_waffle_df
c('Very Low'=count_level('Very Low'))
count_level=function(level){
return(nrow(airbnb_waffle_df==level))
}
c('Very Low'=count_level('Very Low'))
c('Very Low'=count_level('High'))
count_level=function(level){
return(nrow(airbnb_waffle_df%>%filter(crime_level==level)))
}
c('Very Low'=count_level('Very Low'))
c('Very Low'=count_level('High'))
count_level=function(boro,level){
return(nrow(airbnb_waffle_df%>%filter(boro==boro,crime_level==level)))
}
c('Very Low'=count_level('Staten Island','High'))
manhattan_waffle=airbnb_waffle_df%>%filter(boro=='Manhattan')%>%select(crime_level,n_nbhood)
#waffle(rows=4, bronx_waffle$n_nbhood)
waffle(rows=4,manhattan_waffle$n_nbhood) + scale_fill_gradient()
manhattan_waffle=airbnb_waffle_df%>%filter(boro=='Manhattan')%>%select(crime_level,n_nbhood)
#waffle(rows=4, bronx_waffle$n_nbhood)
waffle(rows=4,manhattan_waffle$n_nbhood)
manhattan_waffle=airbnb_waffle_df%>%filter(boro=='Staten Island')%>%select(crime_level,n_nbhood)
#waffle(rows=4, bronx_waffle$n_nbhood)
waffle(rows=4,manhattan_waffle$n_nbhood)
manhattan_waffle
airbnb_waffle_df%>%filter(boro=='Staten Island',crime_level=='High')
count_level=function(boro,level){
return(nrow(airbnb_waffle_df%>%filter(boro==boro,crime_level==level))[0])
}
c('Very Low'=count_level('Very Low'))
c('Very Low'=count_level('Staten Island','High'))
shiny::runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
shiny::runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?addPolylines
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
View(subway_df)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?makeIcon
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/Desktop/Airbnb_shinyapp-master')
runApp('C:/Users/cmlim/Desktop/Airbnb_shinyapp-master')
runApp('C:/Users/cmlim/Desktop/Airbnb_shinyapp-master')
shiny::runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/Desktop/Airbnb_shinyapp-master')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?groupColors
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?airbnb_map_df
View(airbnb_map_df)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?round
library(dplyr)
library(geosphere)
load('subway_df.Rda')
load('airbnb_map_df.Rda')
subway_id=c()
subway_dist=c()
for (rownum in 1:nrow(airbnb_map_df)){
#Loop through all Airbnb Rows(Listings)
#Find distance of each Airbnb Listing at rownum to all Subway Stations
alldist=distHaversine(p1=airbnb_map_df[rownum,c('long','lat')], p2=subway_df[,c('long','lat')])
#Save Subway ID of Nearest Station into 'id' column of Airbnb Data Frame
subway_id[rownum]=subway_df[which(alldist==min(alldist)),'subway_id']
#Save Distance of Nearest Station into 'subway_dist' column of Airbnb Data Frame
subway_dist[rownum]=min(alldist)
}
airbnb_map_df$subway_id=subway_id
airbnb_map_df$subway_dist=round(subway_dist,digits=0) #Round to the nearest meter
airbnb_map_df=inner_join(airbnb_map_df,subway_df[,c('subway_name','subway_line','subway_id')],by='subway_id')
save(airbnb_map_df, file='airbnb_map_df.Rda')
load(airbnb_map_df.Rda)
load('airbnb_map_df.Rda')
View(airbnb_map_df)
load('../../../../Desktop/Data Vis Shiny App/Airbnb/airbnb_map_df.Rda')
load('../../../../Desktop/Data Vis Shiny App/Airbnb/airbnb_map_df.Rda')
View(airbnb_map_df)
save(airbnb_map_df, file='airbnb_map_df.Rda')
load('airbnb_map_df.Rda')
round(airbnb_map_df$subway_dist)
airbnb_map_df$subway_dist=round(airbnb_map_df$subway_dist)
save(airbnb_map_df, file='airbnb_map_df.Rda')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
pwd
getwd()
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
View(airbnb_nbhood_map)
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
getwd()
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
?addMarkers
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
runApp('C:/Users/cmlim/git_proj/airbnb_rshiny')
library(rsconnect)
getwd()
setwd('C:/Users/cmlim/git_proj/airbnb_rshiny/')
rsconnect::setAccountInfo(name='chun9men9',
token='20877F021A9021AA2552908BBCBD6406',
secret='<SECRET>')
rsconnect::setAccountInfo(name='chun9men9',
token='20877F021A9021AA2552908BBCBD6406',
secret='<SECRET>')
rsconnect::setAccountInfo(name='chun9men9',
token='20877F021A9021AA2552908BBCBD6406',
secret='<SECRET>')
rsconnect::setAccountInfo(name='chun9men9',
token='20877F021A9021AA2552908BBCBD6406',
secret='<SECRET>')
